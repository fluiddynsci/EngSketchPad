# OPAM1_flend
# written by John Dannenhoffer

# design paramaters (inspired by B787-800)

# wing
DESPMTR   wing:area        4240    # area
DESPMTR   wing:aspect      9.00    # aspect ratio
DESPMTR   wing:taperi      0.48    # inboard  taper ratio
DESPMTR   wing:tapero      0.23    # outboard taper ratio
DESPMTR   wing:sweep       35.0    # leading edge sweep
DESPMTR   wing:dihedral     7.0    # dihedral
DESPMTR   wing:break       0.37    # fraction inboard
DESPMTR   wing:alphar      -3.0    # setting angle   at root
DESPMTR   wing:thickr      0.15    # thickness ratio at root
DESPMTR   wing:camberr     0.04    # camber    ratio at root
DESPMTR   wing:alphab      -3.0    # setting angle   at break
DESPMTR   wing:thickb      0.15    # thickness ratio at break
DESPMTR   wing:camberb     0.04    # camber    ratio at break
DESPMTR   wing:alphat      -8.0    # setting angle   at tip
DESPMTR   wing:thickt      0.08    # thickness ratio at tip
DESPMTR   wing:cambert     0.04    # camber    ratio at tip
DESPMTR   wing:xroot       54.0    # xloc at root LE
DESPMTR   wing:zroot       -5.0    # zloc at root LE

# fuselage
DESPMTR   fuse:noseRad      2.5    # nose radius
DESPMTR   fuse:fwdLength     28    # length of forward fuselage
DESPMTR   fuse:noseHeight    -2    # zloc of center of nose

DESPMTR   fuse:midLength    115    # length of mid fuselage
DESPMTR   fuse:midWidth      20    # width  of mid fuselage
DESPMTR   fuse:midHeight     20    # height of mid fuselage
DESPMTR   fuse:power          3    # super-ellipse power of mid and aft fuselage

DESPMTR   fuse:aftLength     44    # length of aft fuselage
DESPMTR   fuse:aftWidth       1    # width  of aft fuselage
DESPMTR   fuse:aftHeight      3    # height of aft fuselage
DESPMTR   fuse:aftCenter    8.5    # zloc   of aft fuselage

# wing/fuselage FLEND
DESPMTR   wingFuse:wingDist  3.0   # distance on wing
DESPMTR   wingFuse:fuseDist 15.0   # distance on fuselage
DESPMTR   wingFuse:slope     2.0   # slope strength

# pod
DESPMTR   pod:yb           0.50    # semispan location of pod
DESPMTR   pod:dxnose      -15.0    # x offset of nose from wing leading edge
DESPMTR   pod:dznose       -5.0    # z offset of nose from wing leading edge
DESPMTR   pod:length      25.00    # length of pod
DESPMTR   pod:thick        0.25    # thickness ratio

# pylon
DESPMTR   pylon:dxwing     1.00    # x offset from leading edge of wing
DESPMTR   pylon:dxpod      1.00    # x offset from leading edge of pod
DESPMTR   pylon:length     9.50    # length of pylon
DESPMTR   pylon:thick      0.10    # thickness ratio of pylon

# vertical tail
DESPMTR   vtail:area        610    # vtail area
DESPMTR   vtail:aspect     1.80    # vtail aspect ratio
DESPMTR   vtail:taper      0.28    # vtail taper ratio
DESPMTR   vtail:sweep        45    # vtail sweep
DESPMTR   vtail:thick      0.08    # vtail thickness
DESPMTR   vtail:xroot       150    # xloc of root LE
DESPMTR   vtail:zroot         9    # zloc of root LE

# horizontal tail
DESPMTR   htail:area       1420    # htail area
DESPMTR   htail:aspect     3.60    # htail aspect ratio
DESPMTR   htail:taper      0.33    # htail taper ratio
DESPMTR   htail:sweep        40    # htail sweep
DESPMTR   htail:dihedral     12    # htail dihedral
DESPMTR   htail:thick      0.08    # htail thickness
DESPMTR   htail:xroot       145    # xloc of root LE
DESPMTR   htail:zroot         5    # zloc of root LE

# constant parameter to tell if NACA airfoils should have sharp trailing edges
CONPMTR   SHARP_TE            1    # set to 0 for standard defn, 1 for sharp TEs

# compute wing critical locations / dimensions
SET       wing:span      sqrt(wing:aspect*wing:area)
SET       wing:yroot     0
SET       wing:ytip      -wing:span/2
SET       wing:xtip      wing:xroot-wing:ytip*tand(wing:sweep)
SET       wing:ztip      wing:zroot-wing:ytip*tand(wing:dihedral)
SET       ybreak         wing:ytip*wing:break
SET       xbreak         wing:xroot-ybreak*tand(wing:sweep)
SET       zbreak         wing:zroot-ybreak*tand(wing:dihedral)
SET       chordr         wing:area/((wing:yroot-ybreak)*(wing:taperi+1)+(ybreak-wing:ytip)*wing:taperi*(wing:tapero+1))
SET       chordb         chordr*wing:taperi
SET       chordt         chordb*wing:tapero

# lay out left wing
MARK
    UDPRIM    naca      camber  wing:camberr   thickness  wing:thickr   sharpte  SHARP_TE
    SCALE     chordr
    ROTATEX   90  0  0
    ROTATEY   wing:alphar  0  0
    TRANSLATE wing:xroot   wing:yroot   wing:zroot

    UDPRIM    naca      camber  wing:camberb   thickness  wing:thickb   sharpte  SHARP_TE
    SCALE     chordb
    ROTATEX   90  0  0
    ROTATEY   wing:alphab  0  0
    TRANSLATE xbreak       ybreak    zbreak

    UDPRIM    naca      camber  wing:cambert   thickness  wing:thickt   sharpte  SHARP_TE
    SCALE     chordt
    ROTATEX   90  0  0
    ROTATEY   wing:alphat  0  0
    TRANSLATE wing:xtip    wing:ytip   wing:ztip
RULE
SELECT    FACE
ATTRIBUTE tagComp  $leftWing
SELECT    EDGE
ATTRIBUTE tagComp  $leftWing

# right wing too
RESTORE   .
SELECT    FACE
ATTRIBUTE tagComp  $riteWing
SELECT    EDGE
ATTRIBUTE tagComp  $riteWing
MIRROR    0  1  0

# compute fuselage critical locations / dimensions
SET       fuse:Length  fuse:fwdLength+fuse:midLength+fuse:aftLength

SET       x1             fuse:noseRad
SET       z1             fuse:noseHeight
SET       r1             fuse:noseRad
SET       x2             fuse:fwdLength/2
SET       z2             fuse:noseHeight/2
SET       r2             (fuse:midHeight+fuse:midWidth)/8+fuse:noseRad

SET       L              hypot(x2-x1,z2-z1)

SET       x3             x2-r2/L*(z2-z1)
SET       z3             z2+r2/L*(x2-x1)
SET       x5             x2+r2/L*(z2-z1)
SET       z5             z2-r2/L*(x2-x1)

SET       D              hypot(x3-x1,z3-z1)

SET       phi            atan2(z3-z1,x3-x1)+pi(0.5)-asin(r1/D)
SET       x4             x1+r1*cos(phi)      # upper tangency
SET       z4             z1+r1*sin(phi)

SET       phi            atan2(z5-z1,x5-x1)-pi(0.5)+asin(r1/D)
SET       x6             x1+r1*cos(phi)      # lower tangency
SET       z6             z1+r1*sin(phi)

# build fuselage nose
SPHERE    x1  0  z1  r1
ROTATEX   90  0  z1

# trim nose to part that is exposed
SKBEG     x6      -2*r1  z6      -2*r1
   LINSEG x4      -2*r1  z4      -2*r1
   LINSEG x4-2*r1 -2*r1  z4      -2*r1
   LINSEG x6      -2*r1  z6-2*r1 -2*r1
   LINSEG x6      -2*r1  z6      -2*r1
SKEND
EXTRUDE   0        4*r1  0          4*r1
INTERSECT
STORE     nose

# build rest of fuselage
MARK
    # extract back of nose
    RESTORE   nose
    SELECT    face    @nbody-2  6
    EXTRACT   @iface

    # forward break
    UDPRIM    supell    rx  r2   ry  r2   n  2
    ROTATEY   90-atan2(z2-z1,x2-x1)*180/pi(1) 0 0
    TRANSLATE x2  0  z2

    # mid section
    UDPRIM    supell  rx  fuse:midHeight/2   ry  fuse:midWidth/2   n  fuse:power
    ROTATEY   90 0 0
    TRANSLATE fuse:fwdLength  0  0

    UDPRIM    supell  rx  fuse:midHeight/2   ry  fuse:midWidth/2   n  fuse:power
    ROTATEY   90 0 0
    TRANSLATE fuse:fwdLength+fuse:midLength 0 0

    # tail section
    UDPRIM    supell  rx  fuse:aftHeight/2   ry  fuse:aftWidth/2   n  fuse:power
    ROTATEY   90 0 0
    TRANSLATE fuse:Length 0 fuse:aftCenter
RULE  1

# join nose to rest of fuselage
RESTORE   nose
JOIN      1e-5
SELECT    FACE
ATTRIBUTE tagComp  $fuselage
SELECT    EDGE
ATTRIBUTE tagComp  $fuselage

# combine riteWing to fuselage
UNION
SELECT    EDGE  $tagComp $*
SELECT    NOT
ATTRIBUTE tagComp  $riteWingFuse

# combine leftWing to fuselage
UNION
SELECT    EDGE  $tagComp $*
SELECT    NOT
ATTRIBUTE tagComp  $leftWingFuse

# compute vertical tail critical locations / dimensions
SET       span           sqrt(vtail:area*vtail:aspect)
SET       vtail:xtip     vtail:xroot+span*tand(vtail:sweep)
SET       vtail:ztip     vtail:zroot+span
SET       chordr         vtail:area/(span/2)/(1+vtail:taper)
SET       chordt         chordr*vtail:taper

# lay out vertical tail
MARK
    UDPRIM    naca    thickness  vtail:thick   sharpte  SHARP_TE
    SCALE     chordr
    TRANSLATE vtail:xroot   0   vtail:zroot

    UDPRIM    naca    thickness  vtail:thick   sharpte  SHARP_TE
    SCALE     chordt
    TRANSLATE vtail:xtip    0   vtail:ztip
RULE
SELECT    FACE
ATTRIBUTE tagComp  $vtail
SELECT    EDGE
ATTRIBUTE tagComp  $vtail

# combine vtail to fuselage
UNION
SELECT    EDGE  $tagComp $*
SELECT    NOT
ATTRIBUTE tagComp  $vtailFuse

# compute horizontal tail critical locations / dimensions
SET       span           sqrt(htail:area*htail:aspect)
SET       htail:ytip     span/2
SET       htail:xtip     htail:xroot+htail:ytip*tand(htail:sweep)
SET       htail:ztip     htail:zroot+htail:ytip*tand(htail:dihedral)
SET       chordr         htail:area/(span/2)/(1+htail:taper)
SET       chordt         chordr*htail:taper

# lay out left horizontal tail
MARK
    UDPRIM    naca   thickness  htail:thick   sharpte  SHARP_TE
    ROTATEX   90     0  0
    SCALE     chordr
    TRANSLATE htail:xroot  0  htail:zroot

    UDPRIM    naca   thickness  htail:thick   sharpte  SHARP_TE
    ROTATEX   90     0  0
    SCALE     chordt
    TRANSLATE htail:xtip   htail:ytip  htail:ztip
RULE
SELECT    FACE
ATTRIBUTE tagComp  $leftHtail
SELECT    EDGE
ATTRIBUTE tagComp  $leftHtail

# right htail too
RESTORE   .
MIRROR    0  1  0
SELECT    FACE
ATTRIBUTE tagComp  $riteHtail
SELECT    EDGE
ATTRIBUTE tagComp  $riteHtail

# combine riteHtail to fuselage
UNION
SELECT    EDGE  $tagComp $*
SELECT    NOT
ATTRIBUTE tagComp  $riteHtailFuse

# combine leftHtaiu to fuselage
UNION
SELECT    EDGE  $tagComp $*
SELECT    NOT
ATTRIBUTE tagComp  $leftHailFuse

# compute pod and pylon critical locations / dimensions
SET       yle            pod:yb*wing:ytip
SET       xle            wing:xroot-yle*tand(wing:sweep)
SET       zle            wing:zroot-yle*tand(wing:dihedral)

SET       ypod           yle
SET       xpod           xle+pod:dxnose
SET       zpod           zle+pod:dznose

SET       x1             xle+pylon:dxwing
SET       x2             xpod+pylon:dxpod

# (optionally) add pylons to wings
IFTHEN    pylon:length GT 0
    UDPRIM    naca     thickness  pylon:thick   sharpte  SHARP_TE
    SCALE     pylon:length
    TRANSLATE xpod+pylon:dxpod  ypod  zpod
    EXTRUDE   2*(x1-x2) 0        2*(zle-zpod)
    SELECT    FACE
    ATTRIBUTE tagComp  $leftPylon
    SELECT    EDGE
    ATTRIBUTE tagComp  $leftPylon
    STORE     pylon  0  1
   
# combine leftPylon to leftWing
    UNION     0        "x2+pylon:length/2; ypod; zpod+0.1; 0; 0; 1"

    RESTORE   pylon
    SELECT    FACE
    ATTRIBUTE tagComp  $ritePylon
    SELECT    EDGE
    ATTRIBUTE tagComp  $ritePylon

    MIRROR    0  1  0
# combine ritePylon to riteWing
    UNION     0        "x2+pylon:length/2; -ypod; zpod+0.1; 0; 0; 1"
ENDIF

# (optionally) add pods to pylons
IFTHEN    pylon:length GT 0  AND  pod:length GT 0
    SET       podrad  pod:length*pod:thick/2
    SPHERE    podrad  0  0  podrad
    CYLINDER  podrad  0  0      pod:length-4*podrad  0  0  podrad
    UNION
    CONE      pod:length  0  0  pod:length-4*podrad  0  0  podrad
    UNION
    TRANSLATE xpod      ypod      zpod
    SELECT    FACE
    ATTRIBUTE tagComp  $leftPod
    SELECT    EDGE
    ATTRIBUTE tagComp  $leftPod
        
    STORE     pod  0  1
# combine leftPod to leftPylon
    UNION
   
    RESTORE   pod
    SELECT    FACE
    ATTRIBUTE tagComp  $ritePod
    SELECT    EDGE
    ATTRIBUTE tagComp  $ritePod

    MIRROR    0  1  0
# combine ritePod to ritePylon
    UNION
ENDIF

# (optionally) add wing/fuselage FLENDs
IFTHEN    wingFuse:wingDist GT 0  AND  wingFuse:fuseDist GT 0
   
   # create offset curves on leftWing near leftWingFuse
   SELECT    EDGE      $tagComp  $leftWingFuse
   DIMENSION edgeList  @sellist.size 1
   SET       edgeList  @sellist
   
   SELECT    FACE      $tagComp  $leftWing
   DIMENSION faceList  @sellist.size 1
   SET       faceList  @sellist
   
   UDPARG    offset    faceList  faceList
   UDPARG    offset    edgeList  edgeList
   UDPRIM    offset    dist      wingFuse:wingDist

   # create offset curves on fuselage near leftWingFuse
   SELECT    EDGE      $tagComp  $leftWingFuse
   DIMENSION edgeList  @sellist.size 1
   SET       edgeList  @sellist
   
   SELECT    FACE      $tagComp  $fuselage
   DIMENSION faceList  @sellist.size 1
   SET       faceList  @sellist
   
   UDPARG    offset    faceList  faceList
   UDPARG    offset    edgeList  edgeList
   UDPRIM    offset    dist      wingFuse:fuseDist
   
   # create leftWingFuse flend
   SELECT    FACE      $__offsetFace__  $*
   ATTRIBUTE _flend    $remove

   UDPARG    flend     slopea    wingFuse:slope
   UDPARG    flend     slopeb    wingFuse:slope
   UDPARG    flend     equis     1
   UDPARG    flend     toler     0.01
   UDPRIM    flend     method    2

   # create offset curves on riteWing near riteWingFuse
   SELECT    EDGE      $tagComp  $riteWingFuse
   DIMENSION edgeList  @sellist.size 1
   SET       edgeList  @sellist
   
   SELECT    FACE      $tagComp  $riteWing
   DIMENSION faceList  @sellist.size 1
   SET       faceList  @sellist
   
   UDPARG    offset    faceList  faceList
   UDPARG    offset    edgeList  edgeList
   UDPRIM    offset    dist      wingFuse:wingDist

   # create offset curves on fuselage near riteWingFuse
   SELECT    EDGE      $tagComp  $riteWingFuse
   DIMENSION edgeList  @sellist.size 1
   SET       edgeList  @sellist
   
   SELECT    FACE      $tagComp  $fuselage
   DIMENSION faceList  @sellist.size 1
   SET       faceList  @sellist
   
   UDPARG    offset    faceList  faceList
   UDPARG    offset    edgeList  edgeList
   UDPRIM    offset    dist      wingFuse:fuseDist
   
   # create riteWingFuse flend
   SELECT    FACE      $__offsetFace__  $*
   ATTRIBUTE _flend    $remove

   UDPARG    flend     slopea    wingFuse:slope
   UDPARG    flend     slopeb    wingFuse:slope
   UDPARG    flend     equis     1
   UDPARG    flend     toler     0.01
   UDPRIM    flend     method    2

ENDIF

# adjust tessellation parameters
SELECT body @nbody
   ATTRIBUTE .tParams "1.5; 0.25; 15;"

END
