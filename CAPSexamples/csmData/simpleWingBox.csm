# simpleWingBox.csm

despmtr   length     5
despmtr   width      1
despmtr   height     0.1
cfgpmtr   nSpar      2  
cfgpmtr   nRib       3
despmtr   eps        0.1

# A box is created
# The top and bottom are "wing" skins
# The root and tip are "wing" ribs
# The front and back are leading and trailing edge spars

box 0 0 0 width length height
translate 0 0 -height/2

# Attribute Root
select face 1 3   # ymin
### project width/2 0-eps 0 0 1 0
### select face @iface
attribute capsConstraint $Root
attribute type $rib

# Attribute Tip
select face 1 4   # ymax
### project width/2 length+eps 0 0 -1 0
### select face @iface
attribute type $rib

# Attribute Leading Spar
select face 1 1   # xmin
### project 0-eps length/2 0 1 0 0
### select face @iface
attribute type $spar

# Attribute Trailing Spar
select face 1 2   # xmax
### project width+eps length/2 0 -1 0 0
### select face @iface
attribute type $spar

# Attribute Top
select face 1 6   # zmax
### project width/2 length/2 height 0 0 -1
### select face @iface
attribute type $skin

# Attribute Bottom
select face 1 5   # zmin
### project width/2 length/2 height 0 0 -1
### select face @iface
attribute type $skin

store oml
        
dimension waffle  nSpar+nRib 4 0

set dWidth  width/(nSpar+1)
set dLength length/(nRib+1)

patbeg i nSpar
        set waffle[i,1]                 i*dWidth        # xbegin
        set waffle[i,2]                 0-eps           # ybegin
        set waffle[i,3]                 i*dWidth        # xend
        set waffle[i,4]                 length+eps      # yend
patend
        
patbeg i nRib   
        set waffle[nSpar+i,1]           0-eps           # xbegin
        set waffle[nSpar+i,2]           i*dLength       # ybegin
        set waffle[nSpar+i,3]           width+eps       # xend
        set waffle[nSpar+i,4]           i*dLength       # yend
patend

udprim    waffle    Depth height*10  Segments  waffle
attribute type $waffle
translate 0 0 -height*5
store waffle

# keep part of waffle inside OML
restore   waffle
restore   oml
intersect

# break the OML with the waffle and extract the shell
restore   oml
restore   waffle
subtract
extract   0

# sew the two SHEET Bodies together
union

# Select All faces with Attribute Name: type, Value: waffle
select face $type $waffle
### set listLength @sellist.size
dimension savelist @sellist.nrow @sellist.ncol
set       savelist @sellist

# Place a unique capsGroup attribute on each entity in the list
### patbeg i listLength
patbeg i savelist.size
        select face savelist[i] # Select the entity from the list of interest, this destroys sellist
        attribute capsGroup $InternalStructure_+val2str(i,0)
###        attribute capsGroup val2str(i,0)
###        select face $type $waffle # Create the list again
patend




